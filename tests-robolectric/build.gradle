apply plugin: 'java'

dependencies {
    def androidModule = project(':app')
    compile androidModule

    evaluationDependsOn(':app')

    testCompile androidModule.android.applicationVariants.toList().first().javaCompile.classpath
    testCompile androidModule.android.applicationVariants.toList().first().javaCompile.outputs.files
    testCompile files(androidModule.plugins.findPlugin("com.android.application").getBootClasspath())

    testCompile project(':pulltorefresh')

    testCompile 'junit:junit:4.+'
    testCompile ('org.robolectric:robolectric:2.3') {
        exclude module: 'support-v13'
        exclude module: 'support-v4'
    }
    testCompile "org.mockito:mockito-core:1.+"
    testCompile 'com.squareup.dagger:dagger:1.2.2'


    compile fileTree(dir: 'libs', include: ['*.jar'])
}

tasks.withType(Test) {
    scanForTestClasses = false
    include "**/*Should.class"
    include "**/*Test.class"
    include "**/*Tests.class"
}